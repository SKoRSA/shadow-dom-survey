"use strict";(self.webpackChunkshadow_dom_survey_docs=self.webpackChunkshadow_dom_survey_docs||[]).push([[172],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),y=r,g=c["".concat(d,".").concat(y)]||c[y]||p[y]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=y;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},6887:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(8168),r=(t(6540),t(5680));const i={sidebar_position:1},o="Survey Builder Component",l={unversionedId:"components/survey-builder",id:"components/survey-builder",title:"Survey Builder Component",description:"The Survey Builder component provides an intuitive interface for creating and editing surveys with various question types. This component is encapsulated using Shadow DOM for complete isolation from your website's styles.",source:"@site/docs/components/survey-builder.md",sourceDirName:"components",slug:"/components/survey-builder",permalink:"/shadow-dom-survey/docs/components/survey-builder",draft:!1,editUrl:"https://github.com/SKoRSA/shadow-dom-survey/edit/main/docs/docs/components/survey-builder.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Quick Start",permalink:"/shadow-dom-survey/docs/getting-started/quick-start"},next:{title:"Survey Reader Component",permalink:"/shadow-dom-survey/docs/components/survey-reader"}},d={},s=[{value:"Interactive Demo",id:"interactive-demo",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configurable Options",id:"configurable-options",level:2},{value:"Methods",id:"methods",level:2},{value:"save()",id:"save",level:3},{value:"reset()",id:"reset",level:3},{value:"getData()",id:"getdata",level:3},{value:"setData(data)",id:"setdatadata",level:3},{value:"destroy()",id:"destroy",level:3},{value:"Customizable Demo (Run Your Own)",id:"customizable-demo-run-your-own",level:2},{value:"index.html",id:"indexhtml",level:3}],u={toc:s},c="wrapper";function p({components:e,...n}){return(0,r.yg)(c,(0,a.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"survey-builder-component"},"Survey Builder Component"),(0,r.yg)("p",null,"The Survey Builder component provides an intuitive interface for creating and editing surveys with various question types. This component is encapsulated using Shadow DOM for complete isolation from your website's styles."),(0,r.yg)("h2",{id:"interactive-demo"},"Interactive Demo"),(0,r.yg)("p",null,"The following interactive demo allows you to try the Survey Builder component directly:"),(0,r.yg)("div",{className:"demo-container"},(0,r.yg)("iframe",{src:"/shadow-dom-survey/demos/builder.html",width:"100%",height:"600px",frameBorder:"0",title:"Survey Builder Demo"})),(0,r.yg)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.yg)("p",null,"To use the Survey Builder in your website:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Container for the builder --\x3e\n<div id="surveyBuilder"></div>\n\n\x3c!-- Include the script --\x3e\n<script src="builder-embed.js"><\/script>\n\n\x3c!-- Initialize the builder --\x3e\n<script>\n  const builder = new SurveyBuilder("#surveyBuilder", {\n    isEnglish: true,\n    onSave: async (data) => {\n      console.log("Survey data:", data);\n      // Send data to your server or process it\n      return data;\n    },\n  });\n<\/script>\n')),(0,r.yg)("h2",{id:"configurable-options"},"Configurable Options"),(0,r.yg)("p",null,"The Survey Builder accepts the following configuration options:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"isEnglish")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Set to ",(0,r.yg)("inlineCode",{parentName:"td"},"true")," for English UI, ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," for Arabic")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onSave")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async (data) => data")),(0,r.yg)("td",{parentName:"tr",align:null},"Callback when survey is saved")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"loadSurvey")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async () => null")),(0,r.yg)("td",{parentName:"tr",align:null},"Function to load existing survey data asynchronously")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"autosave")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable/disable automatic saving")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"notificationDuration")),(0,r.yg)("td",{parentName:"tr",align:null},"Number"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"3000")),(0,r.yg)("td",{parentName:"tr",align:null},"Duration of toast notifications in ms")))),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"save"},"save()"),(0,r.yg)("p",null,"Programmatically triggers the save action and returns a boolean indicating success."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'const saveResult = builder.save();\nif (saveResult) {\n  console.log("Survey saved successfully");\n}\n')),(0,r.yg)("h3",{id:"reset"},"reset()"),(0,r.yg)("p",null,"Resets the builder to its initial state."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"builder.reset();\n")),(0,r.yg)("h3",{id:"getdata"},"getData()"),(0,r.yg)("p",null,"Returns the current survey data without saving."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const surveyData = builder.getData();\nconsole.log(surveyData);\n")),(0,r.yg)("h3",{id:"setdatadata"},"setData(data)"),(0,r.yg)("p",null,"Loads existing survey data into the builder."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'builder.setData({\n  surveyId: "survey_" + Date.now().toString(36),\n  title: "Customer Feedback",\n  description: "Please share your experience",\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString(),\n  question: {\n    type: "singleChoice",\n    text: "How would you rate our service?",\n    settings: { required: true },\n    options: ["Excellent", "Good", "Average", "Poor"],\n  },\n});\n')),(0,r.yg)("h3",{id:"destroy"},"destroy()"),(0,r.yg)("p",null,"Removes the component and cleans up resources."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"builder.destroy();\n")),(0,r.yg)("h2",{id:"customizable-demo-run-your-own"},"Customizable Demo (Run Your Own)"),(0,r.yg)("p",null,"Create the following files to run your own customizable demo:"),(0,r.yg)("h3",{id:"indexhtml"},"index.html"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Survey Builder Demo</title>\n    <style>\n      body {\n        font-family: system-ui, -apple-system, sans-serif;\n        max-width: 1000px;\n        margin: 0 auto;\n        padding: 20px;\n      }\n\n      .demo-container {\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        padding: 20px;\n        margin-bottom: 30px;\n      }\n\n      .controls {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 6px;\n        margin-bottom: 20px;\n      }\n\n      .controls label {\n        display: block;\n        margin-bottom: 10px;\n      }\n\n      button {\n        background: #4a6cf7;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 4px;\n        cursor: pointer;\n        margin-right: 10px;\n      }\n\n      pre {\n        background: #f0f0f0;\n        padding: 15px;\n        border-radius: 4px;\n        overflow: auto;\n        max-height: 200px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Survey Builder Demo</h1>\n\n    <div class="controls">\n      <label>\n        <input type="checkbox" id="arabicToggle" /> Arabic Interface\n      </label>\n      <button id="getData">Get Data</button>\n      <button id="loadSample">Load Sample Survey</button>\n      <button id="resetBuilder">Reset</button>\n    </div>\n\n    <div class="demo-container">\n      <div id="surveyBuilder"></div>\n    </div>\n\n    <h3>Current Survey Data:</h3>\n    <pre id="dataOutput">No data yet</pre>\n\n    <script src="builder-embed.js"><\/script>\n    <script>\n      // Initialize the builder\n      let builder = new SurveyBuilder("#surveyBuilder", {\n        isEnglish: true,\n        onSave: async (data) => {\n          document.getElementById("dataOutput").textContent = JSON.stringify(\n            data,\n            null,\n            2\n          );\n          return data;\n        },\n      });\n\n      // Handle language toggle\n      document\n        .getElementById("arabicToggle")\n        .addEventListener("change", function (e) {\n          // Get current data to preserve it\n          const currentData = builder.getData();\n          \n          // Destroy and recreate with new language setting\n          builder.destroy();\n          builder = new SurveyBuilder("#surveyBuilder", {\n            isEnglish: !e.target.checked,\n            onSave: async (data) => {\n              document.getElementById("dataOutput").textContent =\n                JSON.stringify(data, null, 2);\n              return data;\n            },\n          });\n          \n          // Restore the previous data if available\n          if (currentData && currentData.surveyId) {\n            builder.setData(currentData);\n          }\n        });\n\n      // Handle getData button\n      document.getElementById("getData").addEventListener("click", function () {\n        const data = builder.getData();\n        document.getElementById("dataOutput").textContent = JSON.stringify(\n          data,\n          null,\n          2\n        );\n      });\n\n      // Handle sample data button\n      document\n        .getElementById("loadSample")\n        .addEventListener("click", function () {\n          const sampleData = {\n            surveyId: "survey_" + Date.now().toString(36),\n            title: "Customer Satisfaction Survey",\n            description: "Please help us improve our services",\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            question: {\n              type: "singleChoice",\n              text: "How satisfied are you with our service?",\n              settings: { required: true },\n              options: [\n                "Very Satisfied",\n                "Satisfied",\n                "Neutral",\n                "Dissatisfied",\n                "Very Dissatisfied",\n              ],\n            },\n          };\n          builder.setData(sampleData);\n          document.getElementById("dataOutput").textContent = JSON.stringify(\n            sampleData,\n            null,\n            2\n          );\n        });\n\n      // Handle reset button\n      document\n        .getElementById("resetBuilder")\n        .addEventListener("click", function () {\n          builder.reset();\n          document.getElementById("dataOutput").textContent = "No data yet";\n        });\n    <\/script>\n  </body>\n</html>\n')),(0,r.yg)("p",null,"Copy the builder-embed.js file to the same directory and open the HTML file to run your own configurable demo."))}p.isMDXComponent=!0}}]);