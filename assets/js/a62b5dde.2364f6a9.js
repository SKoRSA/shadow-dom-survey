"use strict";(self.webpackChunkshadow_dom_survey_docs=self.webpackChunkshadow_dom_survey_docs||[]).push([[744],{3115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const l={sidebar_position:3},o="SurveyReader API",s={unversionedId:"api/reader-api",id:"api/reader-api",title:"SurveyReader API",description:"The SurveyReader component renders surveys and collects responses from users. This component is built using Shadow DOM for complete encapsulation from the rest of your application.",source:"@site/docs/api/reader-api.md",sourceDirName:"api",slug:"/api/reader-api",permalink:"/shadow-dom-survey/docs/api/reader-api",draft:!1,editUrl:"https://github.com/SKoRSA/shadow-dom-survey/edit/main/docs/docs/api/reader-api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"SurveyBuilder API",permalink:"/shadow-dom-survey/docs/api/builder-api"},next:{title:"Contribution Guidelines",permalink:"/shadow-dom-survey/docs/contributing/guidelines"}},i={},p=[{value:"Constructor",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Options",id:"options",level:2},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Events",id:"events",level:2},{value:"Example: Listening for events",id:"example-listening-for-events",level:3},{value:"Response Data Structure",id:"response-data-structure",level:2},{value:"Complete Usage Example",id:"complete-usage-example",level:2}],d={toc:p},u="wrapper";function y({components:e,...t}){return(0,r.yg)(u,(0,a.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"surveyreader-api"},"SurveyReader API"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"SurveyReader")," component renders surveys and collects responses from users. This component is built using Shadow DOM for complete encapsulation from the rest of your application."),(0,r.yg)("h2",{id:"constructor"},"Constructor"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const readerInstance = new SurveyReader(selector, options);\n")),(0,r.yg)("h3",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"selector")),(0,r.yg)("td",{parentName:"tr",align:null},"String or HTMLElement"),(0,r.yg)("td",{parentName:"tr",align:null},"Target element where the reader will be mounted")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"options")),(0,r.yg)("td",{parentName:"tr",align:null},"Object"),(0,r.yg)("td",{parentName:"tr",align:null},"Configuration options (see Options below)")))),(0,r.yg)("h2",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"isEnglish")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Set to ",(0,r.yg)("inlineCode",{parentName:"td"},"true")," for English UI, ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," for Arabic")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"surveyData")),(0,r.yg)("td",{parentName:"tr",align:null},"Object"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"null")),(0,r.yg)("td",{parentName:"tr",align:null},"Survey data object to display immediately")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"loadSurvey")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async () => null")),(0,r.yg)("td",{parentName:"tr",align:null},"Function to load survey data asynchronously")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onSubmit")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async (responses) => responses")),(0,r.yg)("td",{parentName:"tr",align:null},"Callback executed when user submits the survey")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"completedTitle")),(0,r.yg)("td",{parentName:"tr",align:null},"String"),(0,r.yg)("td",{parentName:"tr",align:null},'"Thank you!"'),(0,r.yg)("td",{parentName:"tr",align:null},"Title shown on the completion screen")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"completedMessage")),(0,r.yg)("td",{parentName:"tr",align:null},"String"),(0,r.yg)("td",{parentName:"tr",align:null},'"Thank you for completing the survey!"'),(0,r.yg)("td",{parentName:"tr",align:null},"Message displayed after successful submission")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"submitButtonText")),(0,r.yg)("td",{parentName:"tr",align:null},"String"),(0,r.yg)("td",{parentName:"tr",align:null},'"Submit"'),(0,r.yg)("td",{parentName:"tr",align:null},"Label for the submit button")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"requiredFieldMessage")),(0,r.yg)("td",{parentName:"tr",align:null},"String"),(0,r.yg)("td",{parentName:"tr",align:null},'"This question requires an answer"'),(0,r.yg)("td",{parentName:"tr",align:null},"Error message for unanswered required questions")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"animation")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable/disable fade/slide animations")))),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"destroy"},"destroy()"),(0,r.yg)("p",null,"Removes the component, cleans up event listeners, and clears the Shadow DOM."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"readerInstance.destroy();\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Important Note"),": Unlike what was previously documented, the SurveyReader component does ",(0,r.yg)("strong",{parentName:"p"},"not")," have a ",(0,r.yg)("inlineCode",{parentName:"p"},"loadSurveyData()")," method. To update survey data after initialization, you must destroy the current instance and create a new one with the new data:"),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'// To update survey data:\nreaderInstance.destroy();\nreaderInstance = new SurveyReader("#surveyReader", {\n  // ... other options ...\n  surveyData: newSurveyData,\n});\n'))),(0,r.yg)("h2",{id:"events"},"Events"),(0,r.yg)("p",null,"The component dispatches a custom event when important actions occur:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Event name"),(0,r.yg)("th",{parentName:"tr",align:null},"When it fires"),(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"event.detail")," contents"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"survey-submit")),(0,r.yg)("td",{parentName:"tr",align:null},"After successful submission"),(0,r.yg)("td",{parentName:"tr",align:null},"The response payload passed to ",(0,r.yg)("inlineCode",{parentName:"td"},"onSubmit"))))),(0,r.yg)("h3",{id:"example-listening-for-events"},"Example: Listening for events"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'document\n  .querySelector("#surveyReader")\n  .addEventListener("survey-submit", (event) => {\n    console.log("Survey submitted!", event.detail);\n    // Process or store submission data\n  });\n')),(0,r.yg)("h2",{id:"response-data-structure"},"Response Data Structure"),(0,r.yg)("p",null,"When a survey is submitted, the responses are structured as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "surveyId": "survey123",\n  "submittedAt": "2023-07-15T14:32:45.123Z",\n  "questionType": "singleChoice",\n  "questionText": "How would you rate our service?",\n  "response": "Excellent"\n}\n')),(0,r.yg)("p",null,"The response format varies slightly depending on the question type:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"singleText/longText"),": Response is a string"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"singleChoice/dropdown"),": Response is the selected option text"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"multipleChoice"),": Response is an array of selected option texts"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"rating"),": Response is a number"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"matrix"),": Response is an object mapping rows to selected column values")),(0,r.yg)("h2",{id:"complete-usage-example"},"Complete Usage Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'// Initialize the reader\nconst reader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: {\n    surveyId: "demo123",\n    title: "Customer Feedback",\n    description: "Please share your thoughts about our product",\n    question: {\n      type: "singleChoice",\n      text: "How satisfied are you with our service?",\n      settings: { required: true },\n      options: [\n        "Very Satisfied",\n        "Satisfied",\n        "Neutral",\n        "Dissatisfied",\n        "Very Dissatisfied",\n      ],\n    },\n  },\n  loadSurvey: async () => {\n    // This will only be used if surveyData is not provided\n    const savedData = localStorage.getItem("mySurvey");\n    return savedData ? JSON.parse(savedData) : null;\n  },\n  onSubmit: async (responses) => {\n    // Handle submission\n    console.log("Survey submitted:", responses);\n\n    // Store responses in localStorage\n    const allResponses = JSON.parse(\n      localStorage.getItem("surveyResponses") || "[]"\n    );\n    allResponses.push(responses);\n    localStorage.setItem("surveyResponses", JSON.stringify(allResponses));\n\n    return responses;\n  },\n  completedTitle: "Thanks for your feedback!",\n  completedMessage: "Your responses have been recorded.",\n});\n\n// To update the survey with new data, you must destroy and recreate:\n/*\nreader.destroy();\nreader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: updatedSurveyData,\n  onSubmit: async (responses) => {\n    // Handle submission...\n    return responses;\n  }\n});\n*/\n\n// Clean up when done\n// reader.destroy();\n')))}y.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,m=u["".concat(i,".").concat(g)]||u[g]||y[g]||l;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);