"use strict";(self.webpackChunkshadow_dom_survey_docs=self.webpackChunkshadow_dom_survey_docs||[]).push([[550],{2779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=t(8168),r=(t(6540),t(5680));const o={sidebar_position:3},a="Single Choice Questions",s={unversionedId:"question-types/single-choice",id:"question-types/single-choice",title:"Single Choice Questions",description:"Single choice questions (also known as radio button questions) allow respondents to select exactly one option from a list of choices.",source:"@site/docs/question-types/single-choice.md",sourceDirName:"question-types",slug:"/question-types/single-choice",permalink:"/shadow-dom-survey/docs/question-types/single-choice",draft:!1,editUrl:"https://github.com/SKoRSA/shadow-dom-survey/edit/main/docs/docs/question-types/single-choice.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Multi-line Text Questions",permalink:"/shadow-dom-survey/docs/question-types/multi-line-text"},next:{title:"Multiple Choice Questions",permalink:"/shadow-dom-survey/docs/question-types/multiple-choice"}},l={},u=[{value:"Features",id:"features",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Builder Configuration",id:"builder-configuration",level:2},{value:"Reader Display",id:"reader-display",level:2},{value:"Response Format",id:"response-format",level:2},{value:"Implementation Example",id:"implementation-example",level:2},{value:"Setting Up in the Builder",id:"setting-up-in-the-builder",level:3},{value:"Setting Up the Reader",id:"setting-up-the-reader",level:3},{value:"HTML Structure (Inside Shadow DOM)",id:"html-structure-inside-shadow-dom",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Accessibility",id:"accessibility",level:2},{value:"Related Question Types",id:"related-question-types",level:2}],d={toc:u},p="wrapper";function c({components:e,...n}){return(0,r.yg)(p,(0,i.A)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"single-choice-questions"},"Single Choice Questions"),(0,r.yg)("p",null,"Single choice questions (also known as radio button questions) allow respondents to select exactly one option from a list of choices."),(0,r.yg)("h2",{id:"features"},"Features"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Present multiple options with only one selectable"),(0,r.yg)("li",{parentName:"ul"},"Customizable option labels"),(0,r.yg)("li",{parentName:"ul"},"Required or optional setting"),(0,r.yg)("li",{parentName:"ul"},"Vertical layout as standard"),(0,r.yg)("li",{parentName:"ul"},"Clear visual feedback for selected options")),(0,r.yg)("h2",{id:"data-structure"},"Data Structure"),(0,r.yg)("p",null,"When creating or using this question type with the Shadow DOM Survey components, the data structure is:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "surveyId": "uniqueId123",\n  "title": "Product Preferences Survey",\n  "description": "Help us understand your preferences",\n  "createdAt": "2023-07-10T15:30:45.123Z",\n  "updatedAt": "2023-07-10T16:45:12.456Z",\n  "question": {\n    "type": "singleChoice",\n    "text": "What is your favorite color?",\n    "settings": {\n      "required": true\n    },\n    "options": [\n      "Red",\n      "Blue",\n      "Green",\n      "Yellow"\n    ]\n  }\n}\n')),(0,r.yg)("h2",{id:"builder-configuration"},"Builder Configuration"),(0,r.yg)("p",null,"In the Survey Builder interface, you can configure single choice questions with these options:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Question Text"),": The main question being asked (required)"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Required"),": Toggle if an answer is mandatory"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Options"),": Add, remove, and edit the available choices")),(0,r.yg)("p",null,"The builder interface provides:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Button to add new options"),(0,r.yg)("li",{parentName:"ul"},"Remove buttons for each existing option"),(0,r.yg)("li",{parentName:"ul"},"Drag handles to reorder options (where supported)")),(0,r.yg)("h2",{id:"reader-display"},"Reader Display"),(0,r.yg)("p",null,"In the Survey Reader, single choice questions display as:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Question text at the top"),(0,r.yg)("li",{parentName:"ul"},"List of options with radio buttons"),(0,r.yg)("li",{parentName:"ul"},"Visual feedback when an option is selected"),(0,r.yg)("li",{parentName:"ul"},"Validation message if required and not answered")),(0,r.yg)("h2",{id:"response-format"},"Response Format"),(0,r.yg)("p",null,"The response data for single choice questions is structured as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "surveyId": "survey123",\n  "submittedAt": "2023-07-15T14:32:45.123Z",\n  "questionType": "singleChoice",\n  "questionText": "What is your favorite color?",\n  "response": "Blue"\n}\n')),(0,r.yg)("h2",{id:"implementation-example"},"Implementation Example"),(0,r.yg)("h3",{id:"setting-up-in-the-builder"},"Setting Up in the Builder"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'// Create a new builder instance\nconst builder = new SurveyBuilder("#surveyBuilder", {\n  isEnglish: true,\n  onSave: async (data) => {\n    console.log("Survey saved:", data);\n    return data;\n  },\n});\n\n// Create a single choice question programmatically\nbuilder.setData({\n  surveyId: "survey_" + Date.now().toString(36),\n  title: "Customer Survey",\n  description: "Help us improve our service",\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString(),\n  question: {\n    type: "singleChoice",\n    text: "How did you hear about us?",\n    settings: {\n      required: true,\n    },\n    options: [\n      "Social Media",\n      "Search Engine",\n      "Friend or Colleague",\n      "Advertisement",\n    ],\n  },\n});\n')),(0,r.yg)("h3",{id:"setting-up-the-reader"},"Setting Up the Reader"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'// Create a new reader instance with the single choice survey data\nconst reader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: {\n    surveyId: "survey_" + Date.now().toString(36),\n    title: "Customer Survey",\n    description: "Help us improve our service",\n    question: {\n      type: "singleChoice",\n      text: "How did you hear about us?",\n      settings: {\n        required: true,\n      },\n      options: [\n        "Social Media",\n        "Search Engine",\n        "Friend or Colleague",\n        "Advertisement",\n      ],\n    },\n  },\n  onSubmit: async (responses) => {\n    console.log("Survey submitted:", responses);\n    return responses;\n  },\n});\n\n// To update the reader with different data, you must destroy and recreate it\nreader.destroy();\nconst updatedReader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: newSingleChoiceSurveyData,\n  onSubmit: async (responses) => {\n    console.log("Updated survey submitted:", responses);\n    return responses;\n  },\n});\n')),(0,r.yg)("h3",{id:"html-structure-inside-shadow-dom"},"HTML Structure (Inside Shadow DOM)"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'<div class="question">\n  <div class="question-text">\n    How did you hear about us?<span class="required">*</span>\n  </div>\n  <div class="options">\n    <label class="option">\n      <input type="radio" name="sr-response-radio" value="0" required />\n      Social Media\n    </label>\n    <label class="option">\n      <input type="radio" name="sr-response-radio" value="1" />\n      Search Engine\n    </label>\n    <label class="option">\n      <input type="radio" name="sr-response-radio" value="2" />\n      Friend or Colleague\n    </label>\n    <label class="option">\n      <input type="radio" name="sr-response-radio" value="3" />\n      Advertisement\n    </label>\n  </div>\n  <div id="sr-question-error" style="display: none;">\n    This question requires an answer\n  </div>\n</div>\n')),(0,r.yg)("h2",{id:"best-practices"},"Best Practices"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Keep option text concise"),": Avoid long option texts for better readability"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Limit the number of options"),": Try to keep under 7 options when possible"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Use clear categories"),": Ensure options are distinct and don't overlap"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Logical ordering"),": Arrange options in a logical order"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Balanced options"),": Avoid biasing respondents with unbalanced options")),(0,r.yg)("h2",{id:"accessibility"},"Accessibility"),(0,r.yg)("p",null,"Single choice questions in Shadow DOM Survey are built with accessibility in mind:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Proper labeling and ARIA attributes"),(0,r.yg)("li",{parentName:"ul"},"Keyboard navigation support"),(0,r.yg)("li",{parentName:"ul"},"Focus indicators"),(0,r.yg)("li",{parentName:"ul"},"Screen reader compatibility")),(0,r.yg)("h2",{id:"related-question-types"},"Related Question Types"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/shadow-dom-survey/docs/question-types/multiple-choice"},"Multiple Choice")," - For selecting multiple options"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/shadow-dom-survey/docs/question-types/dropdown"},"Dropdown")," - For selecting one option from a dropdown menu")))}c.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var i=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),u=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=u(e.components);return i.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},y=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(t),y=r,g=p["".concat(l,".").concat(y)]||p[y]||c[y]||o;return t?i.createElement(g,a(a({ref:n},d),{},{components:t})):i.createElement(g,a({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}y.displayName="MDXCreateElement"}}]);