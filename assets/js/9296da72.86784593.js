"use strict";(self.webpackChunkshadow_dom_survey_docs=self.webpackChunkshadow_dom_survey_docs||[]).push([[881],{3818:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(8168),a=(t(6540),t(5680));const i={sidebar_position:6},s="Rating Questions",o={unversionedId:"question-types/rating",id:"question-types/rating",title:"Rating Questions",description:"Rating questions allow respondents to select a value on a numeric scale, making them ideal for measuring satisfaction, agreement, or other graduated responses.",source:"@site/docs/question-types/rating.md",sourceDirName:"question-types",slug:"/question-types/rating",permalink:"/shadow-dom-survey/docs/question-types/rating",draft:!1,editUrl:"https://github.com/SKoRSA/shadow-dom-survey/edit/main/docs/docs/question-types/rating.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Dropdown Questions",permalink:"/shadow-dom-survey/docs/question-types/dropdown"},next:{title:"Matrix Questions",permalink:"/shadow-dom-survey/docs/question-types/matrix"}},l={},u=[{value:"Features",id:"features",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Builder Configuration",id:"builder-configuration",level:2},{value:"Reader Display",id:"reader-display",level:2},{value:"Response Format",id:"response-format",level:2},{value:"Implementation Example",id:"implementation-example",level:2},{value:"Setting Up in the Builder",id:"setting-up-in-the-builder",level:3},{value:"Setting Up the Reader",id:"setting-up-the-reader",level:3},{value:"HTML Structure (Inside Shadow DOM)",id:"html-structure-inside-shadow-dom",level:3},{value:"Best Practices",id:"best-practices",level:2}],d={toc:u},p="wrapper";function c({components:e,...n}){return(0,a.yg)(p,(0,r.A)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"rating-questions"},"Rating Questions"),(0,a.yg)("p",null,"Rating questions allow respondents to select a value on a numeric scale, making them ideal for measuring satisfaction, agreement, or other graduated responses."),(0,a.yg)("h2",{id:"features"},"Features"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Numerical rating scale (1-N)"),(0,a.yg)("li",{parentName:"ul"},"Configurable maximum value"),(0,a.yg)("li",{parentName:"ul"},"Interactive visual feedback"),(0,a.yg)("li",{parentName:"ul"},"Required or optional setting"),(0,a.yg)("li",{parentName:"ul"},"Clean, intuitive interface")),(0,a.yg)("h2",{id:"data-structure"},"Data Structure"),(0,a.yg)("p",null,"When creating or using this question type with the Shadow DOM Survey components, the data structure is:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "Customer Satisfaction Survey",\n  "description": "Please rate our services",\n  "question": {\n    "type": "rating",\n    "text": "How would you rate our customer service?",\n    "settings": {\n      "required": true,\n      "maxValue": 5 // Number of points on the scale, defaults to 5\n    }\n  }\n}\n')),(0,a.yg)("h2",{id:"builder-configuration"},"Builder Configuration"),(0,a.yg)("p",null,"In the Survey Builder interface, you can configure rating questions with these options:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Question Text"),": The main question being asked (required)"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Required"),": Toggle if an answer is mandatory"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Maximum Value"),": Number of points on the rating scale (typically 5 or 10)")),(0,a.yg)("h2",{id:"reader-display"},"Reader Display"),(0,a.yg)("p",null,"In the Survey Reader, rating questions display as:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Question text"),(0,a.yg)("li",{parentName:"ul"},"A row of selectable rating values (typically numbers)"),(0,a.yg)("li",{parentName:"ul"},"Visual highlighting for the selected value"),(0,a.yg)("li",{parentName:"ul"},"Validation message if required and not answered")),(0,a.yg)("h2",{id:"response-format"},"Response Format"),(0,a.yg)("p",null,"The response data for rating questions is structured as follows:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "surveyId": "survey123",\n  "submittedAt": "2023-07-15T14:32:45.123Z",\n  "questionType": "rating",\n  "questionText": "How would you rate our customer service?",\n  "answer": 4\n}\n')),(0,a.yg)("h2",{id:"implementation-example"},"Implementation Example"),(0,a.yg)("h3",{id:"setting-up-in-the-builder"},"Setting Up in the Builder"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'// Create a new builder instance\nconst builder = new SurveyBuilder("#surveyBuilder", {\n  isEnglish: true,\n  onSave: async (data) => {\n    console.log("Survey saved:", data);\n    return data;\n  },\n});\n\n// Create a rating question programmatically\nbuilder.setData({\n  title: "Product Feedback",\n  description: "Help us improve our product",\n  question: {\n    type: "rating",\n    text: "How likely are you to recommend our product to others?",\n    settings: {\n      required: true,\n      maxValue: 10, // 10-point scale\n    },\n  },\n});\n')),(0,a.yg)("h3",{id:"setting-up-the-reader"},"Setting Up the Reader"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'// Create a new reader instance with the rating survey data\nconst reader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: {\n    title: "Product Feedback",\n    description: "Help us improve our product",\n    question: {\n      type: "rating",\n      text: "How likely are you to recommend our product to others?",\n      settings: {\n        required: true,\n        maxValue: 10, // 10-point scale\n      },\n    },\n  },\n  onSubmit: async (responses) => {\n    console.log("Survey submitted:", responses);\n    return responses;\n  },\n});\n\n// To update the reader with different data, you must destroy and recreate it\nreader.destroy();\nconst updatedReader = new SurveyReader("#surveyReader", {\n  isEnglish: true,\n  surveyData: newRatingSurveyData,\n  onSubmit: async (responses) => {\n    console.log("Updated survey submitted:", responses);\n    return responses;\n  },\n});\n')),(0,a.yg)("h3",{id:"html-structure-inside-shadow-dom"},"HTML Structure (Inside Shadow DOM)"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-html"},'<div class="question">\n  <div class="question-text">\n    How likely are you to recommend our product to others?<span class="required"\n      >*</span\n    >\n  </div>\n  <div class="rating-container">\n    <div class="rating-option">\n      <input\n        type="radio"\n        id="sr-rating-1"\n        name="sr-response-rating"\n        value="1"\n        required\n      />\n      <label for="sr-rating-1">1</label>\n    </div>\n    <div class="rating-option">\n      <input\n        type="radio"\n        id="sr-rating-2"\n        name="sr-response-rating"\n        value="2"\n      />\n      <label for="sr-rating-2">2</label>\n    </div>\n    \x3c!-- Additional rating options... --\x3e\n    <div class="rating-option">\n      <input\n        type="radio"\n        id="sr-rating-10"\n        name="sr-response-rating"\n        value="10"\n      />\n      <label for="sr-rating-10">10</label>\n    </div>\n  </div>\n  <div id="sr-question-error" style="display: none;">\n    This question requires an answer\n  </div>\n</div>\n')),(0,a.yg)("h2",{id:"best-practices"},"Best Practices"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Explain the scale"),': Clarify what each end of the scale represents (e.g., "1 = Poor, 10 = Excellent")'),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Consistent scales"),": Try to use the same scale (e.g., 1-5 or 1-10) throughout your survey"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Consider the granularity"),": 5-point scales work well for general feedback, while 10-point scales offer more precision"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Balance the scale"),": Ensure an equal number of positive and negative options with a neutral midpoint")))}c.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(t),g=a,y=p["".concat(l,".").concat(g)]||p[g]||c[g]||i;return t?r.createElement(y,s(s({ref:n},d),{},{components:t})):r.createElement(y,s({ref:n},d))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=g;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);