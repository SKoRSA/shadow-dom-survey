"use strict";(self.webpackChunkshadow_dom_survey_docs=self.webpackChunkshadow_dom_survey_docs||[]).push([[481],{1487:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(8168),r=(a(6540),a(5680));const l={sidebar_position:2},i="SurveyBuilder API",o={unversionedId:"api/builder-api",id:"api/builder-api",title:"SurveyBuilder API",description:"The SurveyBuilder component provides a user interface for creating and editing surveys with various question types. This component is built using Shadow DOM for complete encapsulation from the rest of your application.",source:"@site/docs/api/builder-api.md",sourceDirName:"api",slug:"/api/builder-api",permalink:"/shadow-dom-survey/docs/api/builder-api",draft:!1,editUrl:"https://github.com/SKoRSA/shadow-dom-survey/edit/main/docs/docs/api/builder-api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"API Overview",permalink:"/shadow-dom-survey/docs/api/overview"},next:{title:"SurveyReader API",permalink:"/shadow-dom-survey/docs/api/reader-api"}},s={},u=[{value:"Constructor",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Options",id:"options",level:2},{value:"Methods",id:"methods",level:2},{value:"save()",id:"save",level:3},{value:"reset()",id:"reset",level:3},{value:"getData()",id:"getdata",level:3},{value:"setData(data)",id:"setdatadata",level:3},{value:"destroy()",id:"destroy",level:3},{value:"Survey Data Structure",id:"survey-data-structure",level:2},{value:"Complete Usage Example",id:"complete-usage-example",level:2}],d={toc:u},p="wrapper";function g({components:e,...t}){return(0,r.yg)(p,(0,n.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"surveybuilder-api"},"SurveyBuilder API"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"SurveyBuilder")," component provides a user interface for creating and editing surveys with various question types. This component is built using Shadow DOM for complete encapsulation from the rest of your application."),(0,r.yg)("h2",{id:"constructor"},"Constructor"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const builderInstance = new SurveyBuilder(selector, options);\n")),(0,r.yg)("h3",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"selector")),(0,r.yg)("td",{parentName:"tr",align:null},"String or HTMLElement"),(0,r.yg)("td",{parentName:"tr",align:null},"Target element where the builder will be mounted")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"options")),(0,r.yg)("td",{parentName:"tr",align:null},"Object"),(0,r.yg)("td",{parentName:"tr",align:null},"Configuration options (see Options below)")))),(0,r.yg)("h2",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"isEnglish")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," for English UI, ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," for Arabic")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onSave")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async (data) => data")),(0,r.yg)("td",{parentName:"tr",align:null},"Callback executed after the ",(0,r.yg)("strong",{parentName:"td"},"Save")," button is pressed")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"loadSurvey")),(0,r.yg)("td",{parentName:"tr",align:null},"Function"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"async () => null")),(0,r.yg)("td",{parentName:"tr",align:null},"Function that should return previously-saved survey JSON")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"autosave")),(0,r.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable/disable automatic saving on form changes")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"notificationDuration")),(0,r.yg)("td",{parentName:"tr",align:null},"Number"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"3000")),(0,r.yg)("td",{parentName:"tr",align:null},"Milliseconds to keep toast notifications on-screen")))),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"save"},"save()"),(0,r.yg)("p",null,"Saves the current survey data, triggers the ",(0,r.yg)("inlineCode",{parentName:"p"},"onSave")," callback, and returns a boolean indicating success."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'const result = builderInstance.save();\nif (result) {\n  console.log("Survey saved successfully");\n}\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Returns"),": boolean - ",(0,r.yg)("inlineCode",{parentName:"p"},"true")," if save was successful, ",(0,r.yg)("inlineCode",{parentName:"p"},"false")," otherwise"),(0,r.yg)("h3",{id:"reset"},"reset()"),(0,r.yg)("p",null,"Resets the builder to its initial state with a blank survey."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"builderInstance.reset();\n")),(0,r.yg)("h3",{id:"getdata"},"getData()"),(0,r.yg)("p",null,"Returns a deep-cloned copy of the current survey data object without saving."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const currentData = builderInstance.getData();\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Returns"),": Object - The current survey data"),(0,r.yg)("h3",{id:"setdatadata"},"setData(data)"),(0,r.yg)("p",null,"Loads existing survey data into the builder and refreshes the UI."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"builderInstance.setData(surveyData);\n")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"data")),(0,r.yg)("td",{parentName:"tr",align:null},"Object"),(0,r.yg)("td",{parentName:"tr",align:null},"Survey data object to load into the builder")))),(0,r.yg)("h3",{id:"destroy"},"destroy()"),(0,r.yg)("p",null,"Removes the component, cleans up event listeners, and clears the Shadow DOM."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"builderInstance.destroy();\n")),(0,r.yg)("h2",{id:"survey-data-structure"},"Survey Data Structure"),(0,r.yg)("p",null,"The survey data structure used by the builder has the following format:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "surveyId": "unique-id-string",\n  "title": "My Survey Title",\n  "description": "Optional survey description",\n  "createdAt": "2023-07-10T15:30:45.123Z",\n  "updatedAt": "2023-07-10T16:45:12.456Z",\n  "question": {\n    "type": "singleChoice", // One of: singleText, longText, singleChoice, multipleChoice, dropdown, rating, matrix\n    "text": "What is your favorite color?",\n    "settings": {\n      "required": true,\n      "placeholder": "Enter text here" // Used for text inputs\n    },\n    "options": ["Red", "Blue", "Green", "Yellow"], // For choice-type questions\n    "rows": ["Quality", "Price", "Support"], // For matrix questions\n    "columns": ["Poor", "Average", "Good", "Excellent"] // For matrix questions\n  }\n}\n')),(0,r.yg)("h2",{id:"complete-usage-example"},"Complete Usage Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'// Initialize the builder\nconst builder = new SurveyBuilder("#surveyBuilder", {\n  isEnglish: true,\n  onSave: async (data) => {\n    // Save survey data to localStorage\n    localStorage.setItem("mySurvey", JSON.stringify(data));\n    console.log("Survey saved:", data);\n    return data;\n  },\n  loadSurvey: async () => {\n    // Load existing survey if available\n    const saved = localStorage.getItem("mySurvey");\n    return saved ? JSON.parse(saved) : null;\n  },\n});\n\n// Get current survey data\nconst currentData = builder.getData();\n\n// Make some programmatic changes\n// (For demonstration purposes - usually you\'d let users edit in the UI)\ncurrentData.title = "Updated Survey";\nbuilder.setData(currentData);\n\n// Save the survey\nconst saveSuccessful = builder.save();\n\n// Clean up when done\n// builder.destroy();\n')))}g.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>c});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(a),y=r,c=p["".concat(s,".").concat(y)]||p[y]||g[y]||l;return a?n.createElement(c,i(i({ref:t},d),{},{components:a})):n.createElement(c,i({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=y;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"}}]);